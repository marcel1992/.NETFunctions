<xctk:ChildWindow x:Class="TestMetroFramework.View.RegisterForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:TestMetroFramework.ViewModel"
        xmlns:local="clr-namespace:TestMetroFramework.View"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:validation="clr-namespace:TestMetroFramework.ViewModel" 
        xmlns:converter="clr-namespace:TestMetroFramework.Converters"
        xmlns:passwordBox="clr-namespace:TestMetroFramework.ViewModel"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:loadin="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
        mc:Ignorable="d"
        WindowState="Open"
        CloseButtonVisibility="Hidden"
        WindowBackground="Transparent"
        WindowOpacity="0"
        Background="Transparent"
        WindowStyle="None"
        Name="RegisterFormChild" Height="300" Width="300">

    <xctk:ChildWindow.DataContext>
        <vm:MainWindowViewModel/>
    </xctk:ChildWindow.DataContext>

    <xctk:ChildWindow.Resources>
        <converter:MinimumLengthConverter x:Key="MinimumLengthConverter"/>
    </xctk:ChildWindow.Resources>
    
    <Grid Margin="10,4,-10,-4">

        <WrapPanel Orientation="Vertical">
            <WrapPanel Orientation="Horizontal">
                <Label Name="lblName" Content="{Binding DataContext.User.LabelName,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}" Width="100"/>
                <TextBox Name="txtName" Width="200" >
                    <TextBox.Resources>
                        <validation:BindingProxy x:Key="Proxy" Data="{Binding DataContext.DefaultLanguageId,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="FirstName" UpdateSourceTrigger="LostFocus" ElementName="RegisterFormChild" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:ValidationRulesViewModel Parameter="Name">
                                    <validation:BindingHelper Value="{Binding Data,Source={StaticResource Proxy}}"/>
                                    <!-- to bind language id to a dependency property-->
                                </validation:ValidationRulesViewModel>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Orientation="Horizontal">
                <Label Name="lblSurname" Content="{Binding DataContext.User.LabelSurname,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}" Width="100"/>
                <TextBox Name="txtSurname" Width="200" >
                    <TextBox.Resources>
                        <validation:BindingProxy x:Key="Proxy" Data="{Binding DataContext.DefaultLanguageId,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="Surname" UpdateSourceTrigger="LostFocus" ElementName="RegisterFormChild" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:ValidationRulesViewModel Parameter="Surname">
                                    <validation:BindingHelper Value="{Binding Data,Source={StaticResource Proxy}}"/>
                                    <!-- to bind language id to a dependency property-->
                                </validation:ValidationRulesViewModel>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Orientation="Horizontal">
                <Label Name="lblUsername" Content="{Binding DataContext.User.LabelUsername,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}" Width="100"/>
                <TextBox Name="txtUsername" Width="200" >
                    <TextBox.Resources>
                        <validation:BindingProxy x:Key="Proxy" Data="{Binding DataContext.DefaultLanguageId,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}"/>
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="Username" UpdateSourceTrigger="LostFocus" ElementName="RegisterFormChild" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:ValidationRulesViewModel Parameter="Username">
                                    <validation:BindingHelper Value="{Binding Data,Source={StaticResource Proxy}}"/>
                                    <!-- to bind language id to a dependency property-->
                                </validation:ValidationRulesViewModel>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </WrapPanel>
            <WrapPanel Orientation="Horizontal">
                <Label Name="lblPassword" Content="{Binding DataContext.User.LabelPassword,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}" Width="100"/>
                <PasswordBox Width="200" PasswordChar="*" passwordBox:PasswordBoxHelper.Attach="True" passwordBox:PasswordBoxHelper.Password="{Binding Text,ElementName=txtPassword,Mode=TwoWay}"/>
                <TextBlock Name="txtPassword" Width="200" Visibility="Hidden">
                    <TextBlock.Resources>
                        <validation:BindingProxy x:Key="Proxy" Data="{Binding DataContext.DefaultLanguageId,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}"/>
                    </TextBlock.Resources>
                    <TextBlock.Text>
                        <Binding Path="Password" UpdateSourceTrigger="LostFocus" ElementName="RegisterFormChild" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:ValidationRulesViewModel Parameter="Password">
                                    <validation:BindingHelper Value="{Binding Data,Source={StaticResource Proxy}}"/>
                                </validation:ValidationRulesViewModel>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>
            </WrapPanel>
            
            <Button Name="btnRegister" Content="{Binding DataContext.User.ButtonRegister,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}" Width="100"
                                    Command="{Binding DataContext.RegisterCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Controls:MetroWindow}}}"
                                    CommandParameter="{Binding ElementName=RegisterFormChild}">
                <Button.Style>
                    <Style TargetType="{x:Type Button }" BasedOn="{StaticResource MetroFlatButton}">
                        <Setter Property="Background" Value="#FF2F2F2F"/>
                        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
                        <Setter Property="Foreground" Value="#FFFFFFFF"/>
                        <Setter Property="Button.IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Text, ElementName=txtName, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource MinimumLengthConverter},Mode=TwoWay}" Value="True"/>
                                    <Condition Binding="{Binding Text, ElementName=txtSurname, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource MinimumLengthConverter},Mode=TwoWay}" Value="True" />
                                    <Condition Binding="{Binding Text, ElementName=txtUsername, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource MinimumLengthConverter},Mode=TwoWay}" Value="True" />
                                    <Condition Binding="{Binding Text, ElementName=txtPassword, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource MinimumLengthConverter},Mode=TwoWay}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Button.IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </WrapPanel>
            <loadin:LoadingIndicator Grid.Column="0" Grid.Row="0" IsActive="{Binding IsArcsActive,Mode=TwoWay}" Style="{DynamicResource LoadingIndicatorArcsStyle}"/>


    </Grid>
</xctk:ChildWindow>
